<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <link rel="stylesheet" href="css/layout.css" type="text/css">
    <link rel="stylesheet" href="js/ol3/ol.css" type="text/css">
    <script src="js/ol3/ol.js" type="text/javascript"></script>
    <script src="js/joose.js" type="text/javascript"></script>    
	<script src="js/app/GUI.js" type="text/javascript"></script>
	<script src="js/app/Track.js" type="text/javascript"></script>
    <script src="js/app/Participant.js" type="text/javascript"></script>
	
	<script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

    <title>Tracking Example</title>
  </head>
  <body onLoad="">
	<div id="map" class="map">		
	</div>
	<script>
var track = new Track();
track.setRoute([
	 [23.274042,42.720320]
	,[23.298761,42.707518]
	,[23.276016,42.701526] 
	,[23.256103,42.721833] 
]);
var gui=new GUI(
{
	track		: track ,
	initialPos  : [23.335338,42.693696],
	initialZoom : 11
});
gui.init();





		var bingmapskey = gui.bingMapKey;
		var geoCodes = new Array();

		function MakeGeocodeRequest(strStart,strEnd)
		{			
		    var geocodeRequest = "http://dev.virtualearth.net/REST/v1/Locations?query=" + encodeURI(strStart) +
                "&output=json&jsonp=GeocodeCallback&key=" + bingmapskey;
			CallRestService(geocodeRequest);
			
			var geocodeRequest = "http://dev.virtualearth.net/REST/v1/Locations?query=" + encodeURI(strEnd) +
                "&output=json&jsonp=GeocodeCallback&key=" + bingmapskey;
			CallRestService(geocodeRequest);
		}
		
		function CallRestService(request) 
		{
			var script = document.createElement("script");
			script.setAttribute("type", "text/javascript");
			script.setAttribute("src", request);
			document.body.appendChild(script);
		}

		function GeocodeCallback(result) 
		{
			if (result &&
				   result.resourceSets &&
				   result.resourceSets.length > 0 &&
				   result.resourceSets[0].resources &&
				   result.resourceSets[0].resources.length > 0) 
			{
				geoCodes.push(result.resourceSets[0].resources[0].bbox[0]);
				geoCodes.push(result.resourceSets[0].resources[0].bbox[1]);
			}			
		}
		
		function loadMapDirectionsModule() {
		    Microsoft.Maps.loadModule('Microsoft.Maps.Directions', { callback: directionsModuleLoaded });
		}
         function directionsModuleLoaded()
         {
            var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
            var startWaypoint = new Microsoft.Maps.Directions.Waypoint({
                location: new Microsoft.Maps.Location(geoCodes[0], geoCodes[1])
            });
            var endWaypoint = new Microsoft.Maps.Directions.Waypoint({
                location: new Microsoft.Maps.Location(geoCodes[2], geoCodes[3])
            });
            directionsManager.addWaypoint(startWaypoint);
            directionsManager.addWaypoint(endWaypoint);
            //directionsManager.setRenderOptions({ itineraryContainer: document.getElementById('itineraryDiv') });
            //Microsoft.Maps.Events.addHandler(directionsManager, 'directionsError', displayError);
            directionsManager.calculateDirections();
         } 

         function displayError(e)
         {
            alert(e.message);
         }
		
		 //-----------------------------------------------------------------------------------
		 MakeGeocodeRequest("Sofia","Stara Zagora");
		 setTimeout("loadMapDirectionsModule()", 3000); //set timeout based on your connectivity speed

</script>
  </body>
</html>
